"""empty message

Revision ID: 4c18b66abd9f
Revises: 77a5394c771e
Create Date: 2023-11-04 12:52:44.685921

"""
import enum

import sqlalchemy_utils
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
from sqlalchemy_utils import TimezoneType

revision = '4c18b66abd9f'
down_revision = '77a5394c771e'
branch_labels = None
depends_on = None

AVAILABLE_USER_TYPES = [
    (u'admin', u'Admin'),
    (u'content-writer', u'Content writer'),
    (u'editor', u'Editor'),
    (u'regular-user', u'Regular user'),
]


class EnumChoices(enum.Enum):
    first = 1
    second = 2


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('post',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('title', sa.String(length=120), nullable=True),
                    sa.Column('text', sa.Text(), nullable=False),
                    sa.Column('date', sa.Date(), nullable=True),
                    sa.Column('background_color', sqlalchemy_utils.types.color.ColorType(length=20), nullable=True),
                    sa.Column('created_at', sqlalchemy_utils.types.arrow.ArrowType(), nullable=True),
                    sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('tag',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.Unicode(length=64), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('tree',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=64), nullable=True),
                    sa.Column('parent_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['parent_id'], ['tree.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user',
                    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
                    sa.Column('type', sa.String(length=100), nullable=True),
                    sa.Column('enum_choice_field', sa.Enum('first', 'second', name='enumchoices'), nullable=True),
                    sa.Column('sqla_utils_choice_field', sqlalchemy_utils.types.choice.ChoiceType(AVAILABLE_USER_TYPES),
                              nullable=True),
                    sa.Column('sqla_utils_enum_choice_field', sqlalchemy_utils.types.choice.ChoiceType(EnumChoices),
                              nullable=True),
                    sa.Column('first_name', sa.String(length=100), nullable=True),
                    sa.Column('last_name', sa.String(length=100), nullable=True),
                    sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=255), nullable=False),
                    sa.Column('website', sqlalchemy_utils.types.url.URLType(), nullable=True),
                    sa.Column('ip_address', sqlalchemy_utils.types.ip_address.IPAddressType(length=50), nullable=True),
                    sa.Column('currency', sqlalchemy_utils.types.currency.CurrencyType(length=3), nullable=True),
                    sa.Column('timezone', sqlalchemy_utils.types.timezone.TimezoneType(backend='pytz'), nullable=True),
                    sa.Column('dialling_code', sa.Integer(), nullable=True),
                    sa.Column('local_phone_number', sa.String(length=10), nullable=True),
                    sa.Column('featured_post_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['featured_post_id'], ['post.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email')
                    )
    op.create_table('post_tags',
                    sa.Column('post_id', sa.Integer(), nullable=True),
                    sa.Column('tag_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
                    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], )
                    )
    op.drop_table('admin_dept')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_dept',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('parent_id', sa.INTEGER(), nullable=True),
                    sa.Column('dept_name', sa.VARCHAR(length=50), nullable=True),
                    sa.Column('sort', sa.INTEGER(), nullable=True),
                    sa.Column('leader', sa.VARCHAR(length=50), nullable=True),
                    sa.Column('phone', sa.VARCHAR(length=20), nullable=True),
                    sa.Column('email', sa.VARCHAR(length=50), nullable=True),
                    sa.Column('status', sa.INTEGER(), nullable=True),
                    sa.Column('remark', sa.TEXT(), nullable=True),
                    sa.Column('address', sa.VARCHAR(length=255), nullable=True),
                    sa.Column('create_at', sa.DATETIME(), nullable=True),
                    sa.Column('update_at', sa.DATETIME(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.drop_table('post_tags')
    op.drop_table('user')
    op.drop_table('tree')
    op.drop_table('tag')
    op.drop_table('post')
    # ### end Alembic commands ###
